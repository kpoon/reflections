How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    You get to see the better (when code was working) and after (when code was not).

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    You could see what change was made to fix an issue.  Or if multiple people
    is working on a file, who changed the file, what changes were made and when.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    pros = you know best when to commit
    cons = you might forget.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    With code, often times, more than one files are changed.  Google Docs is more
    for tracking single docs.

How can you use the commands git log and git diff to view the history of files?

    git log will show you the history of commits.  The git diff can show you the
    changes made between two files.

How might using version control make you more confident to make changes that
could break something?

    You can also go back to the code before the issue was created.

Now that you have your workspace set up, what do you want to try using Git for?

    version control!
